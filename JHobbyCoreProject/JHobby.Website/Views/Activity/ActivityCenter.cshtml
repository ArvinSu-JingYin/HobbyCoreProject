@{
    int verifyMemberId = ViewBag.verifyMemberId;
    bool blnLogIn = ViewBag.logIn;
    var search = ViewBag.search;
    ViewData["Title"] = "活動搜尋";
}
@section Styles
{
    <style>
        .btn-load {
            background: #FFFFFF;
            color: #192335;
            border: 3px solid #EAEDF0;
            border-radius: 5px;
            padding: 16px;
            min-width: 102px;
            display: inline-flex;
        }

        .jhobbyLabel {
            color: #1d953f;
            font-weight: bolder;
        }
    </style>
}
<partial name="_BreadcrumbPartial" />

<!-- Page Content -->
<div id="activity" class="content">
    <div class="container">
        <!-- Sort By -->
        <template v-if="blnData==true">
            <div class="row">
                <div class="col-lg-12">
                    <div class="sortby-section">
                        <div class="sorting-info">
                            <div class="row d-flex align-items-center">
                                <div class="col-xl-4 col-lg-3 col-sm-12 col-12">
                                </div>
                                <div class="col-xl-8 col-lg-9 col-sm-12 col-12">
                                    <div class="sortby-filter-group">
                                        <div class="sortbyset">
                                            <span>縣市：<label class="jhobbyLabel">{{showCity}}&nbsp;</label></span>
                                            <span>區域：<label class="jhobbyLabel">{{showArea}}&nbsp;</label></span>
                                            <span>分類：<label class="jhobbyLabel">{{showCategoryType}}&emsp;</label></span>
                                            <span class="sortbytitle">報名截止日排序</span>
                                            <div class="sorting-select">
                                                <select id="selectSort" v-model="sort" v-on:change="Sort()" class="form-select">
                                                    <option value="asc">近到遠</option>
                                                    <option value="desc">遠到近</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </template>
        <!-- Sort By -->
        <!-- Listing Content -->
        <div data-aos="fade-up" class="row justify-content-center">
            <!-- Featured Item -->
            <div class="col-lg-4 col-md-6" v-for="item in activityList">
                <div class="wrapper">
                    <div class="listing-item listing-item-grid">
                        <div class="listing-img">
                            <a v-bind:href='"@Url.Action("ActivityPage","Activity")/"+item.activityId'>
                                <img :src="item.activityImages[0].imageName" style="height:259px;width:417px;object-fit: cover" alt="Venue">
                            </a>
                            <div class="fav-item-venues">
                                <div class="list-reviews">
                                    <a href="javascript:void(0)" v-on:click="Fav(item.activityId)" v-bind:class="wish.includes(item.activityId)? 'fav-icon selected':'fav-icon'">
                                        <i class="feather-heart"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="listing-content">
                            <h3 class="listing-title">
                                <a v-bind:href='"@Url.Action("ActivityPage","Activity")/"+item.activityId'>{{item.activityName}}</a>
                            </h3>
                            <div class="listing-details-group">
                                <ul>
                                    <li>
                                        <span>
                                            <i class="feather-book-open"></i>活動簡述：{{item.shotActivityNotes}}...
                                        </span>
                                    </li>
                                    <li>
                                        <span>
                                            <i class="feather-map-pin"></i>活動地址：{{item.activityLocation}}
                                        </span>
                                    </li>
                                    <li>
                                        <span>
                                            <i class="feather-calendar"></i>報名截止日 : <span class="primary-text">{{item.joinDeadLine}}</span>
                                        </span>
                                    </li>
                                </ul>
                            </div>
                            <div class="listing-button">
                                <div class="listing-venue-owner">
                                    <a class="navigation" v-bind:href='"@Url.Action("MemberProfile","MemberCenter")/"+item.memberId'>
                                        <img :src="item.headShot" alt="Venue">{{item.nickName}}
                                    </a>
                                </div>
                                @* 									<a href="venue-details.html" class="user-book-now"><span><i class="feather-calendar me-2"></i></span>參加</a> *@
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /Featured Item -->
            <template v-if="blnData==true">
                <div class="col-12 text-center">
                    <div class="more-details">
                        <a v-on:click="More()" class="btn btn-load">查看更多 <img src="~/assets/img/icons/u_plus-square.svg" class="ms-2" alt="img"></a>
                    </div>
                </div>
            </template>
            <template v-else>
                <div class="row">
                    <div class="col-sm-12 col-md-6 col-lg-5 mx-auto text-center">
                        <h3>查無符合您需求的活動</h3>
                        <p>請等等，很快就有揪團主建立活動</p>
                        <a href="/" class="btn btn-primary d-inline-flex align-items-center">返回首頁<i class="feather-arrow-right-circle ms-2"></i></a>
                    </div>
                </div>
            </template>
        </div>
        <!-- /Listing Content -->
    </div>
</div>
<!-- /Page Content -->
@section Scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/3.3.4/vue.global.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.0/axios.min.js" integrity="sha512-WrdC3CE9vf1nBf58JHepuWT4x24uTacky9fuzw2g/3L9JkihgwZ6Cfv+JGTtNyosOhEmttMtEZ6H3qJWfI7gIQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
        const activity = Vue.createApp({
            data() {
                return {
                    originList: [],
                    activityList: [],
                    listStar: 0,
                    listEnd: 6,
                    wish: [],
                    sort: "asc",
                    blnData: true,
                    blnAction: true,
                    showCity: "",
                    showArea: "",
                    showCategoryType: "",
                    typeList: []
                }
            },
            mounted() {
                let _this = this;
                _this.GetCategoryTypeList();
                _this.QueryCategoryList();
                _this.blnAction = blnChange(`@blnLogIn`);
                _this.showCity = _this.ShowCityArea(_this.DecodeHtml(`@search.city`))
                _this.showArea = _this.ShowCityArea(_this.DecodeHtml(`@search.area`))
            },
            methods: {
                GetCategoryTypeList() {
                    let _this = this;
                    var form = new FormData();
                    form.append("categoryId", @search.categoryId);
                    form.append("categoryTypeId", @search.categoryTypeId);
                    form.append("city", _this.DecodeHtml(`@search.city`));
                    form.append("area", _this.DecodeHtml(`@search.area`));
                    form.append("sort", _this.sort);
                    axios.post("/MiddleCenterApi/GetCategoryTypeList", form, {
                        headers: {
                            "Content-Type": "multipart/form-data"
                        }
                    })
                        .then(res => {
                            _this.originList = res.data;
                            if (_this.originList.length === 0) {
                                _this.blnData = false;
                            }
                            _this.activityList = _this.originList.slice(_this.listStar, _this.listEnd)
                        })
                        .catch(err => Swal.fire({
                            text: err,
                            icon: "error",
                            confirmButtonColor: "#097E52",
                            confirmButtonText: "確認"
                        }));
                    _this.QueryWish();
                },
                QueryWish() {
                    let _this = this;
                    if (!_this.blnAction) return
                    axios.get(`/WishApi/GetWishList/@verifyMemberId`)
                        .then(res => _this.wish = res.data)
                        .catch(err => Swal.fire({
                            text: err,
                            icon: "error",
                            confirmButtonColor: "#097E52",
                            confirmButtonText: "確認"
                        }));
                },
                QueryCategoryList() {
                    let _this = this;
                    let tempList = [];
                    axios.get("/CategoryApi/GetCategoriesAllIncludeDetail")
                        .then(res => {
                            tempList = res.data
                            tempList.forEach(item => {
                                for (var i = 0; i < item.categoryDetails.length; i++) {
                                    _this.typeList.push(item.categoryDetails[i])
                                };
                            });
                            _this.showCategoryType = _this.ShowType(`@search.categoryTypeId`);
                        })
                        .catch(err => Swal.fire({
                            text: err,
                            icon: "error",
                            confirmButtonColor: "#097E52",
                            confirmButtonText: "確認"
                        }));
                },
                Fav(id) {
                    let _this = this;
                    if (!_this.blnAction) return
                    if (_this.wish.includes(id)) {
                        axios.delete(`/WishApi/DeleteWish/@verifyMemberId/${id}`)
                            .then(res => _this.QueryWish())
                            .catch(err => Swal.fire({
                                text: err,
                                icon: "error",
                                confirmButtonColor: "#097E52",
                                confirmButtonText: "確認"
                            }));
                    }
                    else {
                        let _this = this;
                        var form = new FormData();
                        form.append("memberId", @verifyMemberId);
                        form.append("activityId", id);
                        form.append("addTime", GetDateTime());
                        axios.post("/WishApi/InsertWish", form, {
                            headers: {
                                "Content-Type": "multipart/form-data"
                            }
                        })
                            .then(res => _this.QueryWish())
                            .catch(err => Swal.fire({
                                text: err,
                                icon: "error",
                                confirmButtonColor: "#097E52",
                                confirmButtonText: "確認"
                            }));
                    }
                },
                More() {
                    let _this = this;
                    let listMax = _this.originList.length;
                    if (_this.listEnd < listMax) {
                        _this.listEnd += 6;
                        _this.activityList = _this.originList.slice(_this.listStar, _this.listEnd)
                        Jhobby_Animation()
                    } else {
                        Swal.fire({
                            position: "center",
                            icon: "info",
                            title: "沒有更多囉",
                            showConfirmButton: false,
                            timer: 1500
                        });
                    }
                },
                Sort() {
                    let _this = this;
                    _this.GetCategoryTypeList()
                    _this.QueryWish();
                },
                DecodeHtml(str) {
                    let txt = document.createElement("textarea");
                    txt.innerHTML = str;
                    return txt.value;
                },
                ShowCityArea(str) {
                    if (str == "") {
                        return "無"
                    }
                    return str;
                },
                ShowType(str) {
                    let _this = this;
                    arry = _this.typeList.filter(x => x.categoryTypeId == str);
                    if (arry.length < 1) {
                        return "無";
                    }
                    return arry[0].typeName;
                },
            }
        }).mount("#activity")
    </script>
}